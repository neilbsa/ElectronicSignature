@model List<Document>





<style>
    .bs-example {
        margin: 5px;
    }

    .accordion .fa {
        margin-right: 0.5rem;
    }
</style>


<div class="modal fade" id="deleteModalView" tabindex="-1" role="dialog" aria-labelledby="deleteModalView-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="deleteModalView-label">Delete!</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this file?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="moveToFolderModal" tabindex="-1" role="dialog" aria-labelledby="moveToFolderModal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="moveToFolderModal-label">Move To Folder</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <div id="documentTreeDom"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="confirmMoveToFolderBtn" class="btn btn-primary">Move</button>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="renameFolder" tabindex="-1" role="dialog" aria-labelledby="renameFolder-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">

                <h4 class="modal-title" id="renameFolder-label">Rename</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="UpdateFolderName">New Folder Name:</label>
                    <input type="text" class="form-control" name="UpdateFolderName" id="UpdateFolderName">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="updateFolderBtn" class="btn btn-primary">Update</button>
            </div>
        </div>
    </div>
</div>





<div class="modal fade" id="addFolderModal" tabindex="-1" role="dialog" aria-labelledby="addFolderModal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="addFolderModal-label">Add New Folder</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

            </div>
            <div class="modal-body">

                <div class="form-group">
                    <label for="FolderName">Folder Name:</label>
                    <input type="text" class="form-control" name="FolderName" id="FolderName">
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="addNewFolderBtn" class="btn btn-primary">Add</button>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="addSignatoryModal" tabindex="-1" role="dialog" aria-labelledby="myModal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModal-label">Add New Signatory</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

            </div>
            <div class="modal-body">
                <form asp-action="AddNewSignatory" asp-controller="Home" id="addSignatoryForm">
                    <input type="hidden" name="Id" id="addSignatoryDocumentId" />
                    <div class="form-group">
                        <label for="EmailAddress">Email Address</label>
                        <input type="email" class="form-control" name="EmailAddress" id="EmailAddress">
                    </div>
                    <div class="form-group">
                        <label for="Name">Name</label>
                        <input type="text" class="form-control" name="Name" id="Name">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="addNewSignatoryButton" class="btn btn-primary">Add</button>
            </div>
        </div>
    </div>
</div>





<div class="modal fade" id="loadingModal" tabindex="-1" data-keyboard="false" data-backdrop="static" role="dialog" aria-labelledby="loadingModal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-body">
                <h4 class="modal-title" id="loadingModal-label">Sending Please wait</h4>
            </div>

        </div>
    </div>
</div>


<div class="row">
    <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">



        <div class="row">
            <h2>Folder:</h2>
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 documentFolderFilterContainer">
                <div id="documentTreeDiv"></div>
            </div>
        </div>



    </div>
    <div class="col-xs-12 col-sm-12 col-md-9 col-lg-9">

        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <div class="card">
                            <div class="card-header">
                                Filter Option:
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                                        <div class="form-group">
                                            <select class="form-control filterOptions" id="statusFilterOption">


                                                @foreach (string item in (ViewBag.FilterOpt as string[]))
                                                {
                                                    <option value="@item">@item</option>
                                                }


                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                                        <div class="form-group">
                                            <select class="form-control filterOptions" id="sortingFilterOption">
                                                @foreach (string item in (ViewBag.sortOption as string[]))
                                                {
                                                    <option value="@item">@item</option>
                                                }

                                            </select>
                                        </div>
                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>
                </div>
                <hr />
            </div>
        </div>
        <div class="row">

            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12" id="mainDocumentListContainer">







                @if (Model != null && Model.Count() > 0)
                {
                    <partial name="IndexItemView" model="Model" />
                }




            </div>
        </div>
    </div>
</div>







@section scripts{




    <script src="https://unpkg.com/gijgo@1.9.13/js/gijgo.min.js" type="text/javascript"></script>


    <script>
        $(document).ready(function () {

            var isError,
                errorMessage;



            // Add minus icon for collapse element which is open by default
            $(".collapse.show").each(function () {
                $(this).prev(".card-header").find(".fa").addClass("fa-minus").removeClass("fa-plus");
            });

            // Toggle plus minus icon on show hide of collapse element
            $(".collapse").on('show.bs.collapse', function () {
                $(this).prev(".card-header").find(".fa").removeClass("fa-plus").addClass("fa-minus");
            }).on('hide.bs.collapse', function () {
                $(this).prev(".card-header").find(".fa").removeClass("fa-minus").addClass("fa-plus");
            });


            $("#mainDocumentListContainer").on("click", ".addNewSignatoriesBtn", function (evt) {
                evt.preventDefault();
                var modal = $("#addSignatoryModal");
                var docId = $("#addSignatoryDocumentId");
                var transId = $(this).data("transactionid");
                docId.val(transId)

                console.log(docId.val());
                modal.modal('show');



            })




            $("#addNewSignatoryButton").on("click", function () {
                var frm = $("#addSignatoryForm");
                var pageModal = $("#loadingModal");
                var createModal = $("#addSignatoryModal");
                createModal.modal('hide');
                pageModal.modal({
                    backdrop: 'static',
                    keyboard: false
                });
                var opt = {
                    url: "/Home/AddNewSignatory",
                    data: frm.serialize(),
                    method: "POST",
                    success: function (data) {

                        if (data.success) {
                            window.location.reload();
                        }

                    }, error: function (error) {

                        alert(error)
                    }
                }


                $.ajax(opt);


            })

            function executeFilter() {
                var statusFilter = $("#statusFilterOption").val();
                var sortingFilter = $("#sortingFilterOption").val();



                var opt = {
                    url: "/Home/RefillIndex",
                    data: {
                        filterOpt: statusFilter,
                        sortBy: sortingFilter,
                        selectedFolderId: selectedFolder
                    },
                    dataType: "HTML",
                    success: function (data) {
                        var dom = $("#mainDocumentListContainer");
                        dom.html("");
                        dom.append(data);

                    }, error: function (err) {

                        alert(err);
                    }
                }

                $.ajax(opt);

            }


            $('.filterOptions').on("change", function () {

                executeFilter();
            })


            $(".extractReportBtn").on("click", function (evt) {
                evt.preventDefault();
                var dom = $(this);
                var url = dom.attr("href");
                window.open(url, "window", "window");
            })


            $("#mainDocumentListContainer").on("click", ".sendEmailRequest", function (evt) {
                evt.preventDefault();
                var dom = $(this);
                var currentId = dom.data("transactionid");
                var pageModal = $("#loadingModal");


                pageModal.modal({
                    backdrop: 'static',
                    keyboard: false
                });
                var opt = {
                    url: "/Home/SendEmailNotification",
                    data: { Id: currentId },
                    success: function (data) {
                        pageModal.modal("toggle");
                        location.reload(true);
                    }, error: function (data) {
                        pageModal.modal("toggle");

                        alert(data.responseText);
                    }
                }

                $.ajax(opt);


            })




            

 





            //=======================TREE LOGICS=============================


            var selectedFolder,
                selectedMoveFile,
                selectMoveFolder,
                coreFolders,
                isCoreFolder
                ;




           var modalTree = $('#documentTreeDom').tree({
                primaryKey: 'id',
                dataSource: '/Home/GetAllMovableFolders',
                autoLoad: true,
                cascadeCheck: false,
                select: function (e, node, id) {

                    selectMoveFolder = id;
                    console.log(selectMoveFolder);
                    console.log(selectedMoveFile);

                }
            });


          $("#confirmMoveToFolderBtn").on("click", function () {

              var opt = {
                  url: "/Home/TransferFileToFolder",
                  data: { fileId: selectedMoveFile, folderId: selectMoveFolder },
                  method: "POST",
                  success: function () {
                       $("#moveToFolderModal").modal("toggle");
                        executeFilter();

                  }, error: function (error) {
                      alert(error.responseText);
                  }
              }

              $.ajax(opt);

           })




            $("#mainDocumentListContainer").on("click",".moveToFolderBtn", function (evt) {
                evt.preventDefault();
                $("#moveToFolderModal").modal("show");
                var id = $(this).data("id");
                console.log(id);
                selectedMoveFile = id;
            })


 


         $("#confirmDeleteBtn").on("click", function () {

              var opt = {
                  url: "/Home/DeleteFileToFolder",
                  data: { fileId: selectedMoveFile },
                  method: "POST",
                  success: function () {
                       $("#deleteModalView").modal("toggle");
                        executeFilter();

                  }, error: function (error) {
                      alert(error.responseText);
                  }
              }

              $.ajax(opt);

           })



            
            $("#mainDocumentListContainer").on("click",".deleteFile", function (evt) {
                evt.preventDefault();
                $("#deleteModalView").modal("show");
                var id = $(this).data("id");
                console.log(id);
                selectedMoveFile = id;
            })





            var mainTree = $('#documentTreeDiv').tree({
                primaryKey: 'id',
                dataSource: '/Home/GetAllFolders',
                autoLoad: true,
                cascadeCheck: false,
                select: function (e, node, id) {

                    selectedFolder = id;
                    executeFilter();

                    console.log(node);

                    isCoreFolder = (coreFolders.indexOf(id) > -1);
                    console.log(selectedFolder);
                }
            });





            $("#addNewFolderBtn").on("click", function () {

                var domFolder = $("#FolderName");
                console.log("button click loading")
                var options =
                {
                    url: "/Home/AddNewDirectoryFolder",
                    dataType: "JSON",
                    data: { MotherId: selectedFolder, text: domFolder.val() },
                    method: "POST",
                    success: function (dataFromServer) {

                        location.reload();

                    }, error: function (alertError) {

                        alert(alertError.responseText);
                    }
                }
                $.ajax(options);
            });



            $("#updateFolderBtn").on("click", function () {

                var domFolder = $("#UpdateFolderName");
                console.log("button click loading")
                var options =
                {
                    url: "/Home/UpdateDirectoryFolderName",
                    dataType: "JSON",
                    data: { MotherId: selectedFolder, text: domFolder.val() },
                    method: "POST",
                    success: function (dataFromServer) {

                        location.reload();

                    }, error: function (alertError) {

                        alert(alertError.responseText);
                    }
                }


                $.ajax(options);
            });





            function functionFillCoreFolder() {
                var opt = {
                    url: "/Home/GetCoreFolder",
                    success: function (data) {
                        coreFolders = data;
                    },
                    error: function () {
                        alert("error Occured");
                    }
                }
                $.ajax(opt);
            }

            mainTree.on('dataBound', function () {
                var node = mainTree.getNodeByText('Documents');
                var nodId = node.data("id")
                selectedFolder = nodId;
                console.log(node);
                functionFillCoreFolder();
                executeFilter();

                mainTree.expand(node);
            });

            $.contextMenu({
                selector: '.gj-list-md-active',
                autoHide: true,
                className: 'contextmenu-custom contextmenu-custom__highlight',
                items: {
                    renameFolder: {
                        name: "Rename Folder",
                        disabled: function (key, opt) {
                            return isCoreFolder;
                        },
                        callback: function (key, opt) {
                            var modal = $("#renameFolder");
                            modal.modal("show");
                        }
                    },
                    newFolder: {
                        name: "New Folder",
                        callback: function (key, opt) {

                            var modal = $("#addFolderModal");
                            modal.modal("show");


                        }
                    },
                    deleteFolder: {
                        name: "Delete",
                        disabled: function (key, opt) {
                            return isCoreFolder;
                        },
                        callback: function (key, opt) {
                            alert('Delete folder is not implemented yet');
                        }
                    }
                }
            })


        });
    </script>


}